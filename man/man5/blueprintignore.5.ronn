blueprintignore(5) -- ignore specific resources when creating blueprints
========================================================================

## SYNOPSIS

	/etc/foo
	!foo/bar
	baz*
	:file:/etc/foobar
	:package:apt/build-essential

## DESCRIPTION

Lines in `~/.blueprintignore` are interpreted as in `gitignore`(5).  Blank lines and lines that begin with a `#` will be ignored.  Patterns that begin with a `!` are negated.  As resources are considered for inclusion in a blueprint, the last matching line in `~/.blueprintignore` wins.

The general form of each line is `:`_type_`:`_resource_, where _type_ is one of `file` or `package`.  The `file` type is assumed and typically seen without the full `:`-prefixed form.

Resources with type `packages` are of the format _manager_`/`_package_.  Ignored packages implicitly ignore their dependencies as well.  Unignored packages (that is, package resources prefixed with `!`) affect only themselves and not their dependencies.

File patterns that do not contain a `/` are matched using `fnmatch`(3) against the last component of each file considered.  Patterns that contain a `/` but do not begin with a `/` are expanded relative to `/etc` before being matched using `glob`(3).

As part of `blueprint-create`(1), the `~/.blueprintignore` file that was used to create the blueprint is stored as `.gitignore` in the local blueprint repository.

All APT- or Yum-managed packages considered essential to the system are part of the default ignore list.

The following files and directories are part of the default ignore list.  They can be negated using `!` just like any other pattern.

* `*.dpkg-*`
* `/etc/.git`
* `/etc/.pwd.lock`
* `/etc/alternatives`
* `/etc/apparmor`
* `/etc/apparmor.d`
* `/etc/ca-certificates.conf`
* `/etc/dpkg/origins/default`
* `/etc/fstab`
* `/etc/group-`
* `/etc/group`
* `/etc/gshadow-`
* `/etc/gshadow`
* `/etc/hostname`
* `/etc/init.d/.legacy-bootordering`
* `/etc/initramfs-tools/conf.d/resume`
* `/etc/ld.so.cache`
* `/etc/localtime`
* `/etc/mailcap`
* `/etc/mtab`
* `/etc/modules`
* `/etc/motd`
* `/etc/network/interfaces`
* `/etc/passwd-`
* `/etc/passwd`
* `/etc/popularity-contest.conf`
* `/etc/prelink.cache`
* `/etc/resolv.conf`
* `/etc/rc.d`
* `/etc/rc0.d`
* `/etc/rc1.d`
* `/etc/rc2.d`
* `/etc/rc3.d`
* `/etc/rc4.d`
* `/etc/rc5.d`
* `/etc/rc6.d`
* `/etc/rcS.d`
* `/etc/shadow-`
* `/etc/shadow`
* `/etc/ssl/certs`
* `/etc/sysconfig/network`
* `/etc/timezone`
* `/etc/udev/rules.d/70-persistent-*.rules`

The following files are ignored if their content matches an expected hash.  They can be negated using `!` just like any other pattern.  These comparisions are made to augment searching files from packages to handle files that are part of packages but are not explicitly listed.

* `/etc/adduser.conf`
* `/etc/apparmor.d/tunables/home.d/ubuntu`
* `/etc/chatscripts/provider`
* `/etc/default/console-setup`
* `/etc/default/grub`
* `/etc/default/irqbalance`
* `/etc/default/locale`
* `/etc/default/rcS`
* `/etc/environment`
* `/etc/hosts.allow`
* `/etc/hosts.deny`
* `/etc/initramfs-tools/modules`
* `/etc/inputrc`
* `/etc/iscsi/iscsid.conf`
* `/etc/kernel-img.conf`
* `/etc/ld.so.conf`
* `/etc/networks`
* `/etc/nsswitch.conf`
* `/etc/ppp/chap-secrets`
* `/etc/ppp/pap-secrets`
* `/etc/ppp/peers/provider`
* `/etc/profile`
* `/etc/python/debian_config`
* `/etc/rc.local`
* `/etc/rsyslog.d/50-default.conf`
* `/etc/security/opasswd`
* `/etc/sgml/xml-core.cat`
* `/etc/shells`
* `/etc/ssh/sshd_config`
* `/etc/sudoers`
* `/etc/ufw/after.rules`
* `/etc/ufw/after6.rules`
* `/etc/ufw/before.rules`
* `/etc/ufw/before6.rules`
* `/etc/ufw/ufw.conf`

These defaults are not meant to be an exhuastive list of exceptions and edge cases found on Debian/Ubuntu systems.  Rather, they're meant to cover the base installation without hassle.

## FILES

* `~/.blueprints.git`:
  The local repsitory where blueprints are stored, each on its own branch.

## THEME SONG

The Flaming Lips - "The W.A.N.D. (The Will Always Negates Defeat)"

## AUTHOR

Richard Crowley <richard@devstructure.com>

## SEE ALSO

`blueprint`(1).
