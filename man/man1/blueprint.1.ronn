blueprint(1) -- reverse engineer server configuration
=====================================================

## SYNOPSIS

`blueprint` [_command_] [_options_][_..._]  

## DESCRIPTION

`blueprint` programs track packages and system files in Git.  Use stored blueprints to build new environments anytime.  Blueprints can be used to generate Puppet modules, Chef cookbooks, or POSIX shell code.

* `blueprint-list`(1):
  List all blueprints.
* `blueprint-create`(1):
  Create a blueprint.
* `blueprint-show`(1):
  Generate code from a blueprint.
* `blueprint-apply`(1):
  Run a blueprint's generated shell code.
* `blueprint-destroy`(1):
  Destroy a blueprint.
* `blueprint`(5):
  Blueprint JSON format.
* `blueprintignore`(5):
  Ignore specific files when creating blueprints.
* `blueprint`(7):
  Blueprint Python library.

### Plumbing

Much like `git`(1) itself, `blueprint` includes many plumbing tools that make it convenient to inspect blueprints.

* `blueprint-git`(1):
  Low-level access to blueprints.
* `blueprint-show-files`(1):
  Show files in a blueprint.
* `blueprint-show-ignore`(1):
  Show .blueprintignore rules from a blueprint.
* `blueprint-show-packages`(1):
  Show packages in a blueprint.
* `blueprint-show-services`(1):
  Show services in a blueprint.
* `blueprint-show-sources`(1):
  Show source tarballs in a blueprint.

## FILES

* `~/.blueprints.git`:
  The local repsitory where blueprints are stored, each on its own branch.
* `~/.blueprintignore`:
  A list of filename patterns to be ignored when creating blueprints.  See `blueprintignore`(5).

## THEME SONG

The Flaming Lips - "The W.A.N.D. (The Will Always Negates Defeat)"

## AUTHOR

Richard Crowley <richard@devstructure.com>
